<br><pre id="0" onclick="afisare(0)"><br><br>Problem2<br><br><br>Problema 2 - 2C:<br><br>Aveti la dispozitie 2 cozi. Introduceti elementele  u w l m v d i s in aceasta ordine, obtinand la final  s w d m i l v u.<br><br>Operatii: <br><br> 'caracter' -> se introduce caracterul in prima coada <br><br>1 -> se scoate din prima coada si se introduce in a doua coada <br><br>2 -> se scoate din a doua coada si se introduce in prima coada <br><br>I_1 se extrage un element din coada 1 si se afiseaza <br><br>I_2 se extrage un element din coada 2 si se afiseaza <br><br><br></pre><br><pre id="1" onclick="afisare(1)"><br><br>Problem3<br>1. Sa se gaseasca o succesiune de mutari astfel incat introducant elementele:  [7, 6, 3, 5, 4, 2, 1] in stiva, la final sa se afiseze: [7, 5, 4, 1, 2, 3, 6]<br>Pentru rezolvare avem nevoie de operatiile: <br>    'n'-> inserarea numarului in stiva<br>    'p'-> extragerea unui numar din stiva si afisarea<br><br></pre><br><pre id="2" onclick="afisare(2)"><br><br>Problem4<br>SS. Avand stiva: [1, 5, 7, 3, 6, 2, 9] gasiti o succesiune de mutari a.i. sa stergeti din stiva elementul 5 avand la dispozitie 2 cozi si operatiile:<br>P -> se extrage un el. din stiva, se introduce in prima coada<br>S -> se sterge un element din stiva<br>1 -> se extrage un el. din coada 1 si se introduce in coada 2<br>2 -> se extrage un el. din coada 2 si se introduce in coada 1<br>I_1 -> se extrage un el. din coada 1 si se introduce in stiva<br>I_2 -> se extrage un el. din coada 2 si se introduce in stiva<br><br></pre><br><pre id="3" onclick="afisare(3)"><br><br>Problem5<br>1. Inserati urmatoarele valori, pe rand, intr-un arbore binar de cautare: [12, 33, 55, 63, 16, 63]<br>2. Scrieti nodurile care se pot sterge in doua moduri. <br>3. Stergeti elementul: 63<br></pre><br><pre id="4" onclick="afisare(4)"><br><br>Problem7<br>Problema 7: RA <br>Reconstruiti arborele care are parcurgerile RSD si SRD date si afisati parcurgerea SDR<br><br>Generarea cerintei<br>Pentru a genera aleator doua parcurgeri RSD si SRD corecte, generam aleator un vector din care<br>vom construi un ABC, pentru care vom face parcurgerile SRD si RSD<br>In continuare, ne folosim de dictionar pentru a redenumi elementele din ABC, fiecare nod primind o<br>valoare random si astfel ABC devenind un arbore binar oarecare. Pentru acest arbore vom face parcurgerile<br>SRD si RSD rezolvand problema generarii cerintei<br><br>Idee de rezolvare a problemei:<br>Pornind de la cele 2 parcurgeri vom reconstrui in mod recursiv arborele binar astfel:<br> -vom determina radacina subarborelui curent din parcurgerea in preordine<br> -o vom cauta in parcurgerea in inordine<br> -vom apela recursiv functia pentru a construi intai subarborele stang si apoi cel drept<br>Setul de elemente random din care vom face ABC este: [22, 5, 48, 13, 25, 45, 47]<br>Inseram pe rand fiecare element fiecare element astfel incat in fiecare valoare din subarborele stang < radacina < fiecare valoare din subarborele drept.<br>Inseram in ABC nodul 5<br>Inseram in ABC nodul 48<br>Inseram in ABC nodul 13<br>Inseram in ABC nodul 25<br>Inseram in ABC nodul 45<br>Inseram in ABC nodul 47<br>Parcurgerea SRD a ABC este:<br>[5, 13, 22, 25, 45, 47, 48]<br>Parcurgerea RSD a ABC este:<br>[22, 5, 13, 48, 25, 45, 47]<br>Redenumirea nodurilor in cele dou parcurgeri este:<br>{22: 47, 5: 36, 13: 18, 48: 44, 25: 43, 45: 25, 47: 35}<br>Dupa redenumirea nodurilor parcurgerea finala RSD este:<br>[47, 36, 18, 44, 43, 25, 35]<br>Dupa redenumirea nodurilor parcurgerea finala SRD este:<br>[36, 18, 47, 43, 25, 35, 44]<br><br></pre><br><pre id="5" onclick="afisare(5)"><br><br>Problem8<br>8. Primiti sirul: [87, 86, 4, 48, 85, 19, 18, 98]. Rezolvati urmatoarele cerinte:<br>	- aplicati 3 pasi din alg. de sort. prin insertie urmat de 2 pasi din alg. de sort. prin metoda bulelor;<br>	- aplicati 4 pasi din alg. de sort. prin selectia maximului urmat de 2 pasi din alg. de sort. prin selectia minimului<br>	- ce elemente ar putea fi considerate pivoti a.i. la finalul unei partitionari a alg. Quicksort sa avem primele 3 elemente sortate si specificati partitionarea folosita (Hoare/Lomuto/etc.)<br>	- exemplificati sortarea sirului folosind Insertion Sort si Selection Sort (Minim)<br><br></pre><br><pre id="6" onclick="afisare(6)"><br><br>Problem9<br>Problema 9: Se primesc numerele: 47, 55, 34, 63, 57, 46, 41, 9, 24.<br>Raspundeti cu adevarat sau fals:<br>1. Vectorul a rezultat in urma aplicarii a 2 pasi din Selection Sort (Maxim).<br>2. Vectorul a rezultat in urma aplicarii a 2 pasi din Insertion Sort.<br>3. Vectorul a rezultat in urma unei partitionari folosind pivotul 9.<br>Exemplificati sortarea sirului folosind Bubble Sort si Selection Sort (Maxim).<br><br></pre><br><pre id="7" onclick="afisare(7)"><br><br>Problem10<br>Primind sirul: 4, 3, 0, 1, 9, 6, 2, 8, 10, 7, 5. Gasiti numarul minim de elemente care pot fi sterse<br>a.i. sa se poata considera ca s-au efectuat:<br>a) 2 pasi din alg. de sort. prin selectia max<br>b) 4 pasi din alg. de sort. prin selectia min<br>c) 3 pasi din alg. de sort. prin insertie directa<br><br>=================================================<br></pre><br><pre id="8" onclick="afisare(8)"><br><br>Problem11<br>11. Partitionati Lomuto urmatorul vector: [7, 68, 41, 94, 96] folosind pivotul: 41<br><br></pre><br><pre id="9" onclick="afisare(9)"><br><br>Problem12<br>Problema 12:<br>Reconstruiti un arbore oarecare, primind urmatoarea parcurgere continua in adancime a arborelui, pornind din radacina: 1, 0, 4, 7, 4, 0, 5, 0, 6, 0, 1, 2, 3, 2, 1, 8, 1, 9, 1<br><br></pre><br><pre id="10" onclick="afisare(10)"><br><br>Problem13<br>RAP: Primind parcurgerea in postordine (SDR) a unui arbore binar, reconstruiti arborele<br>SDR: [11, 7, 22, 34, 38, 42, 45, 32]<br><br></pre><br><pre id="11" onclick="afisare(11)"><br><br>Problem13<br>RAP: Primind parcurgerea in postordine (SDR) a unui arbore binar, reconstruiti arborele<br>SDR: [1, 10, 8, 22, 30, 46, 43, 32, 29]<br><br></pre><br><pre id="12" onclick="afisare(12)"><br><br>Problem16<br>Partitionati urmatorul vector, folosind pivotul 2 si partitionarea de la QS pe care o folosim cand avem multe duplicate: [3, 5, 4, 1, 0, 2, 3, 2, 3, 1]<br>Scrieti numarul de interschimbari.<br></pre><br><pre id="13" onclick="afisare(13)"><br><br>Problem23<br>Problema 23:<br>Primiti vectorul: [2, 9, 0, 4, 11, 6, 8, 1, 3, 5, 10]. <br>Faceti din acest vector un min-ansamblu folosind un numar<br>minim de operatii si demonstrati complexitatea. <br><br></pre><br><pre id="14" onclick="afisare(14)"><br><br>Problem29<br><br>Primiti 13 numere naturale si atunci cand primiti 0, trebuie sa afisati cele mai mari 4 elemente.<br><br>Sirul primit este: 52 30 16 15 69 63 66 7 56 58 41 65 6<br></pre>