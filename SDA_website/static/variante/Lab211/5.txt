<br><pre id="0" onclick="afisare(0)"><br><br>Problem1<br>Aveti la dispozitie 3 structuri de date: <br>  1 -> stiva <br>  2 -> coada <br>  3 -> stiva <br>Operatii: <br>  caracter -> se introduce caracterul in prima stiva <br>  1 -> se scoate din structura 1 se introduce in structura 2 <br>  2 -> se scoate din structura 2 se introduce in structura 3 <br>  3 -> se scoate din structura 3 se introduce in structura 1 <br>Scrieti un sir de operatii pentru a avea la sfarsit:<br>  1 -> George<br>  2 -> doreste<br>  3 -> masina<br></pre><br><pre id="1" onclick="afisare(1)"><br><br>Problem3<br>3. Primiti o stiva. Operatii: <br>numar -> se inseaza numarul in stiva <br>P -> se extrage un numar din stiva si se afiseaza <br>Introduceti in stiva urmatoarele numere: [22, 62, 73, 49, 2, 3, 27, 72, 89, 88, 48] pentru care avem raportul: <br>45% si 54% <br>Determinati operatiile pentru care se afiseaza: [3, 2, 49, 73, 62, 27, 72, 89, 88, 48, 22]<br><br></pre><br><pre id="2" onclick="afisare(2)"><br><br>Problem4<br>Avand elementele 2 9 3 6 11 7 10 8 1 intr-o stiva (1 este ultimul el. inserat), gasiti o succesiune de mutari a.i. sa stergeti el. 11 din stiva avand la dispozitie 2 cozi si operatiile:<br>P -> se extrage un el. din stiva, se introduce in prima coada<br>S -> se sterge un el. din stiva<br>1 -> se extrage un el. din coada 1 se introduce in coada 2<br>2 -> se extrage un el. din coada 2 se introduce in coada 1<br>I_1 -> se extrage un el din coada 1 si se introduce in stiva<br>I_2 -> se extrage un el din coada 2 si se introduce in stiva<br><br><br></pre><br><pre id="3" onclick="afisare(3)"><br><br>Problem5<br>Inserati urmatoarele valori, pe rand, intr-un arbore binar de cautare: [5, 8, 3, 1, 2, 4, 7].<br>Scrieti nodurile care se pot sterge in doua moduri. Stergeti elementul 8.<br></pre><br><pre id="4" onclick="afisare(4)"><br><br>Problem8<br>Se da sirul [50, 93, 88, 25, 73, 84, 13]<br>Rezolvati urmatoarele cerinte:<br><br>a) aplicati 4 pasi din algoritmul de sortare prin insertie urmat de 2 pasi din algoritmul de sortare prin metoda bulelor;<br><br>b) aplicati 4 pasi din algoritmul de sortare prin selectia maximului urmat de 2 pasi din algoritmul de sortare prin selectia minimului;<br><br>c) ce elemente ar putea fi considerate pivoti a. i. la finalul unei partitionari a algoritmului Quicksort sa avem primele 4 elemente sortate si specificati partitionarea folosita (Hoare/Lomuto/etc...);<br><br>d) exemplificati sortarea sirului folosind Insertion Sort si Selection Sort (minim).<br><br></pre><br><pre id="5" onclick="afisare(5)"><br><br>Problem9<br>Se da vectorul 65, 69, 32, 83, 90. Raspundeti cu adevarat sau fals si explicati de ce:<br>- vectorul a rezultat in urma aplicarii a 4 pasi din Selection Sort - maxim<br>- vectorul a rezultat in urma aplicarii a 2 pasi din Insertion Sort<br>- vectorul a rezultat in urma unei partitionari folosind pivotul 32<br>- exemplificati sortarea sirului folosind Bubblesort si Selection Sort (Maxim)<br><br></pre><br><pre id="6" onclick="afisare(6)"><br><br>Problem10<br>10. Se da vectorul: 45, 23, 1, 42, 71, 14. Gasiti numarul minim de elemente care pot fi sterse astfel incat sa se poata considera ca s-au facut <br> - 2 pasi din algoritmul de sortare prin selectia maximului<br> - 2 pasi din algoritmul de sortare prin insertie directa<br> - 1 pasi din algoritmul de sortare prin selectia minimului. <br></pre><br><pre id="7" onclick="afisare(7)"><br><br>Problem11<br>Partiționați următorul vector folosind pivotul 6 și partiționarea Lomuto: [6, 91, 99, 1, 5, 48, 95, 18, 2, 1, 1]<br></pre><br><pre id="8" onclick="afisare(8)"><br><br>Problem12<br>Reconstruiti un arbore oarecare, primind o parcurgere continua in adancime a arborelui, pornind din radacina.<br>Parcurgerea DFS continua:<br>[8, 1, 7, 3, 7, 1, 6, 10, 6, 1, 2, 1, 5, 1, 8, 4, 9, 4, 8]<br></pre><br><pre id="9" onclick="afisare(9)"><br><br>Problema13<br>Se da urmatoarea parcurgere in postordine (SDR) a unui arbore binar de cautare: [5, 7, 10, 19, 16, 13, 1]<br>Reconstruiti arborele.<br></pre><br><pre id="10" onclick="afisare(10)"><br><br>Problem14<br>Care dintre urmatorii vectori pot fi o parcurgere in postordine a unui arbore binar de cautare:<br> a=[2, 3, 7, 9, 14, 10, 4, 18, 17, 15]<br> b=[7, 8, 9, 11, 4, 15, 13, 18, 19, 16]<br> c=[4, 5, 11, 13, 12, 15, 10, 2, 9, 3]<br></pre><br><pre id="11" onclick="afisare(11)"><br><br>Problem15<br>0. Se primesc numerele: 44, 49, 62, 70, 90, 97. Sortati numerele folosind metoda bulelor.<br></pre><br><pre id="12" onclick="afisare(12)"><br><br>Problem17<br>Se da sirul [49, 79, 75, 69, 71, 45, 4, 86, 63, 93, 21, 41, 59, 98, 96]<br>Rezolvati urmatoarea cerinta:<br><br>Aplicati o partitionare a lui QS pentru a gasi care este al 2-lea element, daca vectorul ar fi sortat si exemplificati algoritmul.<br><br></pre><br><pre id="13" onclick="afisare(13)"><br><br>Problem24<br>Gasiti un algoritm care va indica primele 7 numere de forma a + b * sqrt(4), cu a si b din N si exemplificati algoritmul. Radicalul a fost ales aleator.<br><br></pre><br><pre id="14" onclick="afisare(14)"><br><br>Problem28<br>Primiti numere naturale > 0 si atunci cand primiti 0 trebuie sa afisati valoarea medianadin vector.<br>Valoarea mediana este v[mij] daca v e sortat si len e impar, altfel e (v[mij1]+v[mij2])/2 daca e par.<br>[49, 22, 40, 24, 47, 36, 0, 16, 12, 30, 27, 42, 7, 33, 0, 25, 13, 46, 38, 0]<br></pre><br><pre id="15" onclick="afisare(15)"><br><br>Problem29<br>Primiti numere naturale > 0 si atunci cand primiti 0, trebuie sa afisati cele mai mari k elemente.<br> Se dau numerele: 32, 31, 22, 15, 21, 58, 87, 0.<br> k = 4<br><br></pre>