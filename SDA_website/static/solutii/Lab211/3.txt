<pre id="0" onclick="afisare(0)"><br><br>Problem1<br><br>    Creeam cele trei structuri de date in ordine: stiva coada stiva.<br>Stiva1:|__________|<br>Coada:|__________|<br>Stiva2:|__________|<br><br>   Efectuam sirul de operatii: <br>M ̲c a ̲c r ̲c i ̲c u ̲c s ̲c v ̲c  ̲1  ̲2 a ̲c  ̲1  ̲2 c ̲c  ̲1  ̲2 a ̲c  ̲1  ̲2 n ̲c  ̲1  ̲2 t ̲c  ̲1  ̲2 a ̲c  ̲1  ̲2 v ̲c  ̲1 r ̲c  ̲1 e ̲c  ̲1 a ̲c  ̲1 <br><br>   Obtinem: <br>Stiva1: M    a    r    i    u    s    v̶    a̶    c̶    a̶    n̶    t̶    a̶    v̶    r̶    e̶    a̶<br>Coada:  v̶    a̶    c̶    a̶    n̶    t̶    a̶    v    r    e    a<br>Stiva2: v    a    c    a    n    t    a<br><br></pre><br><pre id="1" onclick="afisare(1)"><br><br>Problem4<br> Avand elementele 3 6 2 7 intr-o stiva (7 este ultimul el. inserat), gasiti o succesiune de mutari a.i. sa stergeti el. 3 din stiva avand la dispozitie 2 cozi si operatiile:<br>P -> se extrage un el. din stiva, se introduce in prima coada<br>S -> se sterge un el. din stiva<br>1 -> se extrage un el. din coada 1 se introduce in coada 2<br>2 -> se extrage un el. din coada 2 se introduce in coada 1<br>I_1 -> se extrage un el din coada 1 si se introduce in stiva<br>I_2 -> se extrage un el din coada 2 si se introduce in stiva<br><br>-------- Rezolvare --------<br><br>Avem initial:<br>	Stiva		3 6 2 7 (varf)<br>	Coada 1		Coada este goala.<br><br>	Coada 2		Coada este goala.<br><br>____________________________________________________<br><br>Vom introduce in coada 1 toate elementele de pe stiva,ce se afla deasupra elementului de scos<br><br>Aplicam operatia P 7<br><br>	Stiva		3 6 2 (varf)<br>	Coada 1		7 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia P 2<br><br>	Stiva		3 6 (varf)<br>	Coada 1		7 <--2 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia P 6<br><br>	Stiva		3 (varf)<br>	Coada 1		7 <--2 <--6 <--<br>	Coada 2		Coada este goala.<br><br>______________________________________<br><br>Vom scoate elementul cerut de pe stiva<br><br>Aplicam operatia S 3<br><br>______________________________________________________<br><br>Introducem toate elementele din coada 1, in ordine, pe stiva<br><br>Aplicam operatia I_1 7<br>	Stiva		7 (varf)<br>	Coada 1		2 <--6 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia I_1 2<br>	Stiva		7 2 (varf)<br>	Coada 1		6 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia I_1 6<br>	Stiva		7 2 6 (varf)<br>	Coada 1		Coada este goala.<br><br>	Coada 2		Coada este goala.<br><br><br>_______________________________________________<br><br>Scoatem toate elementele de pe stiva, in ordinesi le introducem in coada 1<br><br>Aplicam operatia P 6<br><br>	Stiva		7 2 (varf)<br>	Coada 1		6 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia P 2<br><br>	Stiva		7 (varf)<br>	Coada 1		6 <--2 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia P 7<br><br>	Stiva		Stiva este goala.<br><br>	Coada 1		6 <--2 <--7 <--<br>	Coada 2		Coada este goala.<br><br><br>______________________________________________________<br><br>Introducem toate elementele din coada 1, in ordine, pe stiva<br><br>Aplicam operatia I_1 6<br>	Stiva		6 (varf)<br>	Coada 1		2 <--7 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia I_1 2<br>	Stiva		6 2 (varf)<br>	Coada 1		7 <--<br>	Coada 2		Coada este goala.<br><br>Aplicam operatia I_1 7<br>	Stiva		6 2 7 (varf)<br>	Coada 1		Coada este goala.<br><br>	Coada 2		Coada este goala.<br><br><br></pre><br><pre id="2" onclick="afisare(2)"><br><br>Problem5<br>  <br>Introducem elementele: [8, 4, 6, 7, 1, 5, 3] intr-un arbore binar de cautare. <br>Radacina va fi: 8<br><br>Vectorul de tati este: [-1, 4, -1, 1, 8, 6, 4, 6, 0, -1]<br>Vectorul de nivel este: [-1, 2, -1, 3, 1, 3, 2, 3, 0, -1]<br><br>Verificam in vectorul de tati ce noduri pot fi sterse in 2 moduri (cele care au 2 fii).<br>Nodurile care se pot sterge in doua moduri sunt: <br>4 deoarece are 2 fii<br>6 deoarece are 2 fii<br><br>Arborele initial este:<br><br><br>8<br>                              7<br>                    6<br>                              5<br>          4<br>                              3<br>                    1<br><br>Arborele final, dupa stergerea elementului 4 este:<br><br><br>8<br>                              7<br>                    6<br>          5<br>                              3<br>                    1<br><br><br></pre><br><pre id="3" onclick="afisare(3)"><br><br>Problem8<br>Subpuctul a)<br>INSERTION SORT: <br><br>PASUL 1:<br>[55, 95, 18, 26, 54]<br><br>PASUL 2:<br>[55, 18, 95, 26, 54]<br>[18, 55, 95, 26, 54]<br>[18, 55, 95, 26, 54]<br><br>PASUL 3:<br>[18, 55, 26, 95, 54]<br>[18, 26, 55, 95, 54]<br>[18, 26, 55, 95, 54]<br><br>PASUL 4:<br>[18, 26, 55, 54, 95]<br>[18, 26, 54, 55, 95]<br>[18, 26, 54, 55, 95]<br><br>BUBBLE SORT: <br><br>PASUL 1:<br>[18, 26, 54, 55, 95]<br>PASUL 2:<br>[18, 26, 54, 55, 95]<br>PASUL 3:<br>[18, 26, 54, 55, 95]<br>PASUL 4:<br>[18, 26, 54, 55, 95]<br>Subpunctul b)<br>SELECTIA MAXIMULUI:<br> PASUL 1:<br>[55, 95, 18, 26, 54]:<br> PASUL 2:<br>[55, 95, 18, 26, 54]:<br> PASUL 3:<br>[55, 95, 18, 26, 54]:<br>SELECTIA MINIMULUI:<br><br> PASUL 1:<br>[18, 95, 55, 26, 54]<br> PASUL 2:<br>[18, 26, 55, 95, 54]<br> PASUL 3:<br>[18, 26, 54, 95, 55]<br> PASUL 4:<br>[18, 26, 54, 55, 95]<br>Subpunctul c)<br><br>Pivot: 54<br>[26, 18, 54, 95, 55]<br><br>Pivot: 26<br>[18, 26, 54, 95, 55]<br><br>Pivot: 55<br>[18, 26, 54, 55, 95]<br><br>Folosim partitionarea Hoare<br><br>Subpunctul d)<br>INSERTION SORT:<br>PASUL 1:<br>[18, 26, 54, 55, 95]<br><br>PASUL 2:<br>[18, 26, 54, 55, 95]<br><br>PASUL 3:<br>[18, 26, 54, 55, 95]<br><br>PASUL 4:<br>[18, 26, 54, 55, 95]<br><br>PASUL 5:<br>[18, 26, 54, 55, 95]<br><br>SELECTION SORT: <br><br>PASUL 1:<br>[18, 26, 54, 55, 95]<br><br>PASUL 2:<br>[18, 26, 54, 55, 95]<br><br>PASUL 3:<br>[18, 26, 54, 55, 95]<br><br>PASUL 4:<br>[18, 26, 54, 55, 95]<br><br>PASUL 5:<br>[18, 26, 54, 55, 95]<br><br></pre><br><pre id="4" onclick="afisare(4)"><br><br>Problem9<br>nesortat = 51, 9, 26, 97, 93, 68, 91, 33, 8<br>sortat = 8, 9, 26, 33, 51, 68, 91, 93, 97<br><br>Vectorul a rezultat in urma aplicarii a 2 pasi din Selection Sort (maxim) ?<br>Fals, deoarece dupa aplicarea a 2 pasi din selection sort (maxim) cele mai mari 2 numere s-ar fi aflat la finalul vectorului, insa nu s-a intamplat acest lucru<br><br>Vectorul a rezultat in urma aplicarii a 1 pasi din Insertion Sort ?<br>Fals, deoarece nici primii si nici ultimii 2 termeni ai vectorului NU sunt sortati !<br><br>Verificati daca vectorul a rezultat in urma unei partitionari folosind pivotul 68 !<br>Aflam pozitia pe care se afla pivotul: 5<br>Verificam daca elementele din stanga sunt mai mici decat pivotul, iar cele din dreapta, mai mari. <br>Vectorul nu a rezultat in urma unei partitionari folosind pivotul 68<br><br>Sortare cu Bubble Sort:<br>Sirul este: 51, 9, 26, 97, 93, 68, 91, 33, 8<br>Dupa parcurgere sirul este: 9, 26, 51, 93, 68, 91, 33, 8, 97<br>Dupa parcurgere sirul este: 9, 26, 51, 68, 91, 33, 8, 93, 97<br>Dupa parcurgere sirul este: 9, 26, 51, 68, 33, 8, 91, 93, 97<br>Dupa parcurgere sirul este: 9, 26, 51, 33, 8, 68, 91, 93, 97<br>Dupa parcurgere sirul este: 9, 26, 33, 8, 51, 68, 91, 93, 97<br>Dupa parcurgere sirul este: 9, 26, 8, 33, 51, 68, 91, 93, 97<br>Dupa parcurgere sirul este: 9, 8, 26, 33, 51, 68, 91, 93, 97<br>Dupa parcurgere sirul este: 8, 9, 26, 33, 51, 68, 91, 93, 97<br>Sirul este sortat !<br>v = 8, 9, 26, 33, 51, 68, 91, 93, 97<br><br>Sortare cu Selection Sort (maxim):<br>Sirul este: 51, 9, 26, 97, 93, 68, 91, 33, 8<br>Parcurgem sirul pana la elementul 8 si interschimbam 8 cu 97 .<br>Sirul este: 51, 9, 26, 8, 93, 68, 91, 33, 97<br>Parcurgem sirul pana la elementul 33 si interschimbam 33 cu 93 .<br>Sirul este: 51, 9, 26, 8, 33, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 91 si nu se face nicio interschimbare . <br>Sirul este: 51, 9, 26, 8, 33, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 68 si nu se face nicio interschimbare . <br>Sirul este: 51, 9, 26, 8, 33, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 33 si interschimbam 33 cu 51 .<br>Sirul este: 33, 9, 26, 8, 51, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 8 si interschimbam 8 cu 33 .<br>Sirul este: 8, 9, 26, 33, 51, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 26 si nu se face nicio interschimbare . <br>Sirul este: 8, 9, 26, 33, 51, 68, 91, 93, 97<br>Parcurgem sirul pana la elementul 9 si nu se face nicio interschimbare . <br>Sirul este sortat !<br>v = 8, 9, 26, 33, 51, 68, 91, 93, 97<br><br><br></pre><br><pre id="5" onclick="afisare(5)"><br><br>Problem10<br><br>Generam toate combinarile posibile cu elementele vectorului,pana cand am rezolvat toate cerintele. Pentru fiecare combinare generata sterg din vector respectivele elemente si verific daca satisface vreuna din cerinte.<br> <br>---Numarul minim de elemente care trebuiesc sterse pt ca vectorul sa fie rezultatul a 2 pasi de sortare prin insertie directa este 0<br>   Vectorul rezultat dupa stergeri este [11, 36, 70, 67, 79, 34, 87, 3, 38]<br>   CONDITIA INDEPLINITA: primele 3 elemente din vector sunt sortate crescator<br>---Pentru a satisface 2 pasi de sortare prin selectia maximului, numarul minim de elemente care trebuiesc sterse este 3 ({34, 3, 38}).<br>   Vectorul rezultat dupa stergeri este [11, 36, 70, 67, 79, 87]<br>   CONDITIA INDEPLINITA: pe ultimele 2 pozitii se afla cele mai mari elemente din vector, sortate crescator<br>---Pentru a satisface 3 pasi de sortare prin selectia minumului, numarul minim de elemente care trebuiesc sterse este 4 ({38, 34, 3, 70}).<br>   Vectorul rezultat dupa stergeri este [11, 36, 67, 79, 87]<br>   CONDITIA INDEPLINITA: pe primele 3 pozitii se afla cele mai mici elemente din vector, sortate crescator<br></pre><br><pre id="6" onclick="afisare(6)"><br><br>Problem11<br>O partitionare a vectorului este:<br>[0, 26, 11, 19, 16, 38, 97, 49, 91, 44, 100]<br><br><br>Pivotul este : 38<br>Vrem ca pivotul sa se afle pe ultima pozitie in sir<br>Daca nu se afla pe ultima pozitie atunci il interschimbam cu elementul aflat pe pozitia respectiva<br>Dupa interschimbarea pivotului sirul devine : [0, 91, 44, 26, 11, 100, 97, 49, 19, 16, 38]<br><br>Vom calcula pozitia unde trebuie sa stea pivotul,crescand indicele si efectuand interschimbari a.i. elementele mai mici sau egale sa fie in stanga sa.<br>La sfarsit pivotul va fi mutat pe pozitia corespunzatoare.<br>Pozitia pivotului este initial -1 dar va deveni cel putin 0 pe parcursul algoritmului.<br><br>Pasul 1 : Elementul 0 este mai mic decat pivotul ---> se interschimba 0 cu 0 iar pozitia pivotului devine 0<br>Vectorul la aces pas al algoritmului este : [0, 91, 44, 26, 11, 100, 97, 49, 19, 16, 38]<br><br>Pasul 2 : Elementul 91 este mai mare decat pivotul ---> vectorul si pozitia pivotului raman aceleasi<br>Vectorul la aces pas al algoritmului este : [0, 91, 44, 26, 11, 100, 97, 49, 19, 16, 38]<br><br>Pasul 3 : Elementul 44 este mai mare decat pivotul ---> vectorul si pozitia pivotului raman aceleasi<br>Vectorul la aces pas al algoritmului este : [0, 91, 44, 26, 11, 100, 97, 49, 19, 16, 38]<br><br>Pasul 4 : Elementul 26 este mai mic decat pivotul ---> se interschimba 26 cu 91 iar pozitia pivotului devine 1<br>Vectorul la aces pas al algoritmului este : [0, 26, 44, 91, 11, 100, 97, 49, 19, 16, 38]<br><br>Pasul 5 : Elementul 11 este mai mic decat pivotul ---> se interschimba 11 cu 44 iar pozitia pivotului devine 2<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 91, 44, 100, 97, 49, 19, 16, 38]<br><br>Pasul 6 : Elementul 100 este mai mare decat pivotul ---> vectorul si pozitia pivotului raman aceleasi<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 91, 44, 100, 97, 49, 19, 16, 38]<br><br>Pasul 7 : Elementul 97 este mai mare decat pivotul ---> vectorul si pozitia pivotului raman aceleasi<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 91, 44, 100, 97, 49, 19, 16, 38]<br><br>Pasul 8 : Elementul 49 este mai mare decat pivotul ---> vectorul si pozitia pivotului raman aceleasi<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 91, 44, 100, 97, 49, 19, 16, 38]<br><br>Pasul 9 : Elementul 19 este mai mic decat pivotul ---> se interschimba 19 cu 91 iar pozitia pivotului devine 3<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 19, 44, 100, 97, 49, 91, 16, 38]<br><br>Pasul 10 : Elementul 16 este mai mic decat pivotul ---> se interschimba 16 cu 44 iar pozitia pivotului devine 4<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 19, 16, 100, 97, 49, 91, 44, 38]<br><br>Pasul 11 : Elementul 38 este egal cu pivotul ---> se interschimba 38 cu 100 iar pozitia pivotului devine 5<br>Vectorul la aces pas al algoritmului este : [0, 26, 11, 19, 16, 38, 97, 49, 91, 44, 100]<br><br><br><br></pre><br><pre id="7" onclick="afisare(7)"><br><br>Problem12<br><br>Reconstruim arborele plecand de la parcurgerea data<br>Pentru fiecare nou voi afisa fii lui<br>2<br>|---------3<br>|---------5<br>|---------11<br>|---------12<br><br>3<br>|---------1<br>|---------7<br>|---------8<br>|---------10<br><br>12<br>|---------4<br>|---------6<br>|---------9<br><br></pre><br><pre id="8" onclick="afisare(8)"><br><br>Problema13<br><br>Radacina arborelui este 17<br>Parcurgerea in inordine (SRD) a arborelui este: [2, 4, 8, 9, 12, 17, 19]<br><br>Arborele reconstruit din SDR+SRD este: <br><br>          19<br>17<br>                              12<br>                    9<br>          8<br>                              4<br>                    2<br></pre><br><pre id="9" onclick="afisare(9)"><br><br>Problem14<br><br>pentru a:[6, 7, 2, 10, 1, 15, 13, 17, 12, 9] afiseaza: NU, deoarece, 1 < 9, iar 1 este pe pozitia 4, cand ar fi trebuit sa fie pozitionat inainte de 10 care se afla pe pozitia 3.<br>pentru b:[9, 6, 13, 15, 11, 16, 10, 4, 18, 17] afiseaza: DA<br><br>Arborele este:<br><br><br>          18<br>17<br>                              16<br>                                                  15<br>                                                            13<br>                                        11<br>                    10<br>                                        9<br>                              6<br>          4<br><br>pentru c:[4, 7, 6, 9, 14, 19, 13, 12, 5, 3] afiseaza: DA<br><br>Arborele este:<br><br><br>                                        19<br>                                                  14<br>                              13<br>                    12<br>                              9<br>                                                  7<br>                                        6<br>          5<br>                    4<br>3<br><br><br></pre><br><pre id="10" onclick="afisare(10)"><br><br>Problem15<br>0. Numerele sortate: [10, 19, 29, 37, 45, 58, 60, 71, 88]<br></pre><br><pre id="11" onclick="afisare(11)"><br><br>Problem17<br>Cautam elementul de pe pozitia 2.<br>Aplicam quick sort modificat.<br><br> Am ales random pivotul: 45<br> Vectorul dupa partitionarea cu pivotul 45 arata asa: <br>[43, 25, 35, 40, 21, 45, 52, 89, 85, 81, 91, 74, 58]<br><br> Am ales random pivotul: 21<br> Vectorul dupa partitionarea cu pivotul 21 arata asa: <br>[21, 25, 35, 40, 43, 45, 52, 89, 85, 81, 91, 74, 58]<br><br> Am ales random pivotul: 43<br> Vectorul dupa partitionarea cu pivotul 43 arata asa: <br>[21, 25, 35, 40, 43, 45, 52, 89, 85, 81, 91, 74, 58]<br><br> Am ales random pivotul: 35<br> Vectorul dupa partitionarea cu pivotul 35 arata asa: <br>[21, 25, 35, 40, 43, 45, 52, 89, 85, 81, 91, 74, 58]<br> Am gasit elementul de pe pozitia 2, acesta este 25.<br> <br></pre><br><pre id="12" onclick="afisare(12)"><br><br>Problem24<br>Idee de rezolvare: Cream un MIN_heap. Avem radacina a + b * sqrt(k) si inseram in heap numerele (a + 1) + b * sqrt(k) si a + (b + 1) * sqrt(k). <br>Dupa fiecare inserare reechilibram heap-ul. Afisam radacina, decapitam heap-ul si il reechilibram.<br><br>Heap:  ( 0 , 0 ) ,  ( 1 , 0 ) ,  ( 0 , 1 ) <br>Primul element este: 0<br><br>Heap:  ( 1 , 0 ) ,  ( 0 , 1 ) ,  ( 2 , 0 ) ,  ( 1 , 1 ) <br>Al 2-lea element este: 1 + 0 * sqrt(8) = 1.0 <br><br>Heap:  ( 2 , 0 ) ,  ( 0 , 1 ) ,  ( 1 , 1 ) ,  ( 3 , 0 ) ,  ( 2 , 1 ) <br>Al 3-lea element este: 2 + 0 * sqrt(8) = 2.0 <br><br>Heap:  ( 0 , 1 ) ,  ( 3 , 0 ) ,  ( 1 , 1 ) ,  ( 2 , 1 ) ,  ( 0 , 2 ) <br>Al 4-lea element este: 0 + 1 * sqrt(8) = 2.8284271247461903 <br><br>Heap:  ( 3 , 0 ) ,  ( 4 , 0 ) ,  ( 1 , 1 ) ,  ( 0 , 2 ) ,  ( 2 , 1 ) ,  ( 3 , 1 ) <br>Al 5-lea element este: 3 + 0 * sqrt(8) = 3.0 <br><br>Heap:  ( 1 , 1 ) ,  ( 4 , 0 ) ,  ( 3 , 1 ) ,  ( 0 , 2 ) ,  ( 2 , 1 ) ,  ( 1 , 2 ) <br>Al 6-lea element este: 1 + 1 * sqrt(8) = 3.8284271247461903 <br><br>Heap:  ( 4 , 0 ) ,  ( 2 , 1 ) ,  ( 5 , 0 ) ,  ( 0 , 2 ) ,  ( 1 , 2 ) ,  ( 3 , 1 ) ,  ( 4 , 1 ) <br>Al 7-lea element este: 4 + 0 * sqrt(8) = 4.0 <br><br>Heap:  ( 2 , 1 ) ,  ( 0 , 2 ) ,  ( 5 , 0 ) ,  ( 4 , 1 ) ,  ( 1 , 2 ) ,  ( 3 , 1 ) ,  ( 2 , 2 ) <br>Al 8-lea element este: 2 + 1 * sqrt(8) = 4.82842712474619 <br><br>Heap:  ( 5 , 0 ) ,  ( 0 , 2 ) ,  ( 3 , 1 ) ,  ( 4 , 1 ) ,  ( 1 , 2 ) ,  ( 2 , 2 ) ,  ( 6 , 0 ) ,  ( 5 , 1 ) <br>Al 9-lea element este: 5 + 0 * sqrt(8) = 5.0 <br><br>Heap:  ( 0 , 2 ) ,  ( 1 , 2 ) ,  ( 3 , 1 ) ,  ( 4 , 1 ) ,  ( 5 , 1 ) ,  ( 2 , 2 ) ,  ( 6 , 0 ) ,  ( 0 , 3 ) <br>Al 10-lea element este: 0 + 2 * sqrt(8) = 5.656854249492381 <br><br>Heap:  ( 3 , 1 ) ,  ( 1 , 2 ) ,  ( 6 , 0 ) ,  ( 4 , 1 ) ,  ( 5 , 1 ) ,  ( 2 , 2 ) ,  ( 0 , 3 ) ,  ( 3 , 2 ) <br>Al 11-lea element este: 3 + 1 * sqrt(8) = 5.82842712474619 <br><br></pre><br><pre id="13" onclick="afisare(13)"><br><br>Problem28<br>	Cream heap-urile: <br><br>Vectorul initial: [35, 22, 17, 24, 26, 21, 27, 0]<br>Min heap: [24, 27, 26, 35]<br>      24<br>  27      26<br>35<br>Max heap: [22, 17, 21]<br>  22<br>17  21<br>Mediana 1 este: 24<br><br>Vectorul initial: [35, 22, 17, 24, 26, 21, 27, 0, 31, 28, 47, 15, 12, 30, 32, 41, 0]<br>Min heap: [27, 28, 30, 32, 47, 31, 35, 41]<br>              27<br>      28              30<br>  32      47      31      35<br>41<br>Max heap: [26, 22, 24, 17, 12, 15, 21]<br>      26<br>  22      24<br>17  12  15  21<br>Mediana 2 este: 27<br><br>Vectorul initial: [35, 22, 17, 24, 26, 21, 27, 0, 31, 28, 47, 15, 12, 30, 32, 41, 0, 9, 40, 0]<br>Min heap: [27, 28, 30, 32, 47, 31, 35, 41, 40]<br>              27<br>      28              30<br>  32      47      31      35<br>41  40<br>Max heap: [26, 22, 24, 17, 12, 15, 21, 9]<br>              26<br>      22              24<br>  17      12      15      21<br>9<br>Mediana 3 este: 27<br><br><br></pre><br><pre id="14" onclick="afisare(14)"><br><br>Problem29<br><br>5, 10, 33, 67, 73<br>5, 10, 33, 38, 67<br>5, 10, 33, 38, 44<br><br></pre>